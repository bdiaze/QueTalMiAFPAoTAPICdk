name: CDK Deploy on AWS

on:
    push:
        branches:
            - main
      
jobs:
    build:
        runs-on: ubuntu-latest
        environment: Production
        permissions:
            contents: read
            id-token: write
        env:
            APP_NAME: ${{ vars.APP_NAME }}
            ACCOUNT_AWS: ${{ vars.ACCOUNT_AWS }}
            REGION_AWS: ${{ vars.REGION_AWS }}
            HANDLER: ${{ vars.HANDLER }}
            TIMEOUT: ${{ vars.TIMEOUT }}
            MEMORY_SIZE: ${{ vars.MEMORY_SIZE }}
            DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
            API_MAPPING_KEY: ${{ vars.API_MAPPING_KEY }}
            VPC_ID: ${{ vars.VPC_ID }}
            SUBNET_ID_1: ${{ vars.SUBNET_ID_1 }}
            SUBNET_ID_2: ${{ vars.SUBNET_ID_2 }}
            RDS_SECURITY_GROUP_ID: ${{ vars.RDS_SECURITY_GROUP_ID }}
            SECRET_ARN_CONNECTION_STRING: ${{ vars.SECRET_ARN_CONNECTION_STRING }}
            ALLOWED_DOMAINS: ${{ vars.ALLOWED_DOMAINS }}
            ARN_PARAMETER_HERMES_API_URL: ${{ vars.ARN_PARAMETER_HERMES_API_URL }}
            ARN_PARAMETER_HERMES_API_KEY_ID: ${{ vars.ARN_PARAMETER_HERMES_API_KEY_ID }}
            ARN_PARAMETER_KAIROS_API_URL: ${{ vars.ARN_PARAMETER_KAIROS_API_URL }}
            ARN_PARAMETER_KAIROS_API_KEY_ID : ${{ vars.ARN_PARAMETER_KAIROS_API_KEY_ID }}
                        
        steps:
            - name: Checkout Repositorio
              uses: actions/checkout@v4
      
            - name: Instalar .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: ${{ vars.VERSION_DOTNET }}
      
            - name: Instalar Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ vars.VERSION_NODEJS }}
                                                      
            - name: Instalar AWS CDK
              run: npm install -g aws-cdk

            - name: Publish .NET AoT Minimal API
              run: |
                  docker run --rm -v ${{ github.workspace }}:/src -w /src public.ecr.aws/amazonlinux/amazonlinux:2023 \bash -c "
                    yum install -y dotnet-sdk-8.0 gcc zlib-devel && 
                    dotnet publish /p:PublishDir=../publish /p:PublishAot=true -r linux-x64 --self-contained &&
                    cd ./publish &&
                    zip -r -T ./publish.zip ./*"
      
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
              with:
                  aws-region: ${{ vars.REGION_AWS }}
                  role-to-assume: ${{ vars.ARN_GITHUB_ROLE }}
                  
            - name: CDK Synth
              working-directory: ${{ vars.DIRECTORIO_CDK }}
              run: cdk synth
              
            - name: CDK Diff
              working-directory: ${{ vars.DIRECTORIO_CDK }}
              run: cdk --app cdk.out diff
              
            - name: CDK Deploy
              working-directory: ${{ vars.DIRECTORIO_CDK }}
              run: cdk --app cdk.out deploy --require-approval never --no-previous-parameters
          